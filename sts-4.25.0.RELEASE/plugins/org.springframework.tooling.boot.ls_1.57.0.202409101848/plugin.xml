<?xml version="1.0" encoding="UTF-8"?>
<?eclipse version="3.4"?>
<plugin>

   <extension
         point="org.eclipse.lsp4e.languageServer">
      <server
            class="org.springframework.tooling.boot.ls.DelegatingStreamConnectionProvider"
            clientImpl="org.springframework.tooling.ls.eclipse.commons.STS4LanguageClientImpl"
            id="org.eclipse.languageserver.languages.springboot"
            label="Spring Boot Language Server"
            lastDocumentDisconnectedTimeout="2147483647"
            markerType="org.springframework.tooling.boot.ls.diagnostic"
            serverInterface="org.springframework.ide.vscode.commons.protocol.spring.SpringIndexLanguageServer"
            singleton="true">
      </server>

      <contentTypeMapping
            contentType="org.eclipse.jdt.core.javaSource"
            id="org.eclipse.languageserver.languages.springboot">
<!--
         <enabledInputWhen
               description="Resource belongs to a project with Spring Boot on Classpath">
            <test
                  property="org.springframework.tooling.boot.isBootResource">
            </test>
         </enabledInputWhen>
-->
      </contentTypeMapping>

      <contentTypeMapping
            contentType="org.springframework.boot.ide.properties.application.properties"
            id="org.eclipse.languageserver.languages.springboot"
            languageId="spring-boot-properties">
<!--
         <enabledInputWhen
               description="Resource belongs to a project with Spring Boot on Classpath">
            <test
                  property="org.springframework.tooling.boot.isBootResource">
            </test>
         </enabledInputWhen>
-->
      </contentTypeMapping>

      <contentTypeMapping
            contentType="org.springframework.boot.ide.properties.application.yml"
            id="org.eclipse.languageserver.languages.springboot"
            languageId="spring-boot-properties-yaml">
<!--
         <enabledInputWhen
               description="Resource belongs to a project with Spring Boot on Classpath">
            <test
                  property="org.springframework.tooling.boot.isBootResource">
            </test>
         </enabledInputWhen>
-->
      </contentTypeMapping>

      <contentTypeMapping
            contentType="org.springframework.boot.ide.xmlconfig"
            id="org.eclipse.languageserver.languages.springboot">
<!--
         <enabledInputWhen
               description="Resource belongs to a project with Spring Boot on Classpath">
            <test
                  property="org.springframework.tooling.boot.isBootResource">
            </test>
         </enabledInputWhen>
-->
      </contentTypeMapping>

      <contentTypeMapping
            contentType="org.springframework.boot.ide.boot.factories"
            id="org.eclipse.languageserver.languages.springboot"
            languageId="spring-factories">
<!--
         <enabledInputWhen
               description="Resource belongs to a project with Spring Boot on Classpath">
            <test
                  property="org.springframework.tooling.boot.isBootResource">
            </test>
         </enabledInputWhen>
-->
      </contentTypeMapping>
      <contentTypeMapping
            contentType="org.springframework.boot.ide.pom.xml"
            id="org.eclipse.languageserver.languages.springboot">
      </contentTypeMapping>
      <contentTypeMapping
            contentType="org.springframework.boot.ide.boot.jpa-named-queries"
            id="org.eclipse.languageserver.languages.springboot"
            languageId="jpa-query-properties">
      </contentTypeMapping>
      
   </extension>

   <extension
         point="org.eclipse.core.contenttype.contentTypes">

<!--
      WARNING! 
      
      TLDR; Always put 
         base-type="org.eclipse.core.runtime.text" 
      in *every* content type definiton.
      
      Longer explanation:
      
      Do not use  
      base-type="org.eclipse.jdt.core.javaProperties"
      this causes reconciling of *any* properties file
      as if it was a boot properties file.
      
      Similarly
      base-type="org.eclipse.core.runtime.xml" 
      causes reconciling of *any* XML file
      as if it was a Spring xml config file.
      
      Also to avoid some suspected bug/weirdness in Lsp4e
      which I do not really understand, a base-type must allways 
      be added. Therefore the only possible choice 
      that makes everything work is
      "org.eclipse.core.runtime.text".
      
      See: https://github.com/spring-projects/sts4/issues/320
  -->
      <content-type
            base-type="org.eclipse.core.runtime.text"
            default-charset="ISO-8859-1"
            file-names="application.properties,application-dev.properties"
            file-patterns="application-*.properties"
            id="org.springframework.boot.ide.properties.application.properties"
            name="Spring Properties File"
            priority="high">
      </content-type>

      <content-type
            base-type="org.eclipse.core.runtime.text"
            default-charset="UTF-8"
            file-names="application.yml,bootstrap.yml,application-dev.yml,application.yaml,bootstrap.yaml,application-dev.yaml"
            file-patterns="application-*.yml,application-*.yaml"
            id="org.springframework.boot.ide.properties.application.yml"
            name="Spring Yaml Properties File"
            priority="high">
      </content-type>

      <content-type
            base-type="org.eclipse.core.runtime.text"
            default-charset="UTF-8"
            file-names="spring.factories,aot.factories"
            file-patterns="*.factories"
            id="org.springframework.boot.ide.boot.factories"
            name="Spring Factories File"
            priority="high">
      </content-type>
      
      <content-type
            base-type="org.eclipse.core.runtime.xml"
            default-charset="UTF-8"
            id="org.springframework.boot.ide.xmlconfig"
            name="Spring XML Config File"
            priority="normal">
            <describer class="org.springframework.tooling.boot.ls.xml.XMLRootElementContentDescriber2">
                  <parameter name="element" value="beans"/>
            </describer>
      </content-type>

      <file-association
            content-type="org.springframework.boot.ide.properties.application.properties"
            file-names="application.properties,application-dev.properties"
            file-patterns="application-*.properties">
      </file-association>

      <file-association
            content-type="org.springframework.boot.ide.properties.application.yml"
            file-names="application.yml,bootstrap.yml,application-dev.yml,application.yaml,bootstrap.yaml,application-dev.yaml"
            file-patterns="application-*.yml,application-*.yaml">
      </file-association>

      <file-association
            content-type="org.springframework.boot.ide.boot.factories"
            file-names="spring.factories,aot.factories"
            file-patterns="*.factories">
      </file-association>
      <content-type
            base-type="org.eclipse.core.runtime.xml"
            default-charset="UTF-8"
            id="org.springframework.boot.ide.pom.xml"
            name="Pom Xml"
            priority="normal">
      </content-type>
      <file-association
            content-type="org.springframework.boot.ide.pom.xml"
            file-names="pom.xml">
      </file-association>
      <content-type
            base-type="org.eclipse.core.runtime.text"
            default-charset="UTF-8"
            file-names="jpa-named-queries.properties"
            id="org.springframework.boot.ide.boot.jpa-named-queries"
            name="JPA Named Queries File"
            priority="high">
      </content-type>
      <file-association
            content-type="org.springframework.boot.ide.boot.jpa-named-queries"
            file-names="jpa-named-queries.properties">
      </file-association>
   </extension>
   
   <extension
         point="org.eclipse.ui.preferencePages">
      <page
            category="org.springframework.tooling.boot.ls.liveInfo"
            class="org.springframework.tooling.boot.ls.prefs.RemoteAppsPrefsPage"
            id="org.springframework.tooling.boot.ls.prefs.RemoteAppsPrefsPage"
            name="Remote Boot Apps">
      </page>
      <page
            category="org.springsource.ide.eclipse.commons.preferencePage"
            class="org.springframework.tooling.boot.ls.XmlConfigPreferencePage"
            id="org.springframework.tooling.boot.xml.ls.preferences"
            name="XML Config Files">
      </page>
      <page
            class="org.springframework.tooling.boot.ls.prefs.BootJavaPreferencesPage"
            id="org.springsource.ide.eclipse.commons.preferencePage"
            name="Spring">
      </page>
      <page
            category="org.springsource.ide.eclipse.commons.preferencePage"
            class="org.springframework.tooling.boot.ls.RewritePreferencePage"
            id="org.springframework.tooling.boot.ls.rewrite"
            name="OpenRewrite">
      </page>
      <page
            category="org.springframework.tooling.boot.ls.rewrite"
            class="org.springframework.tooling.boot.ls.RecipeFiltersPreferencePage"
            id="org.springframework.tooling.boot.ls.rewrite.filters"
            name="Filter Recipes">
      </page>
      <page
            category="org.springframework.tooling.boot.ls.rewrite"
            class="org.springframework.tooling.boot.ls.PlugRecipesPreferencePage"
            id="org.springframework.tooling.boot.ls.rewrite.load"
            name="Plug Recipes">
      </page>
      <page
            category="org.springsource.ide.eclipse.commons.preferencePage"
            class="org.springframework.tooling.boot.ls.prefs.ValidationPreferencePage"
            id="org.springframework.tooling.boot.validation"
            name="Validation">
      </page>
      <page
            category="org.springsource.ide.eclipse.commons.preferencePage"
            class="org.springframework.tooling.boot.ls.prefs.LiveInformationPreferencePage"
            id="org.springframework.tooling.boot.ls.liveInfo"
            name="Live Information">
      </page>
      
   </extension>
   
   
   <extension
         point="org.eclipse.core.runtime.preferences">
      <initializer
            class="org.springframework.tooling.boot.ls.prefs.PrefsInitializer">
      </initializer>
   </extension>
   
   <extension
         point="org.eclipse.ui.handlers">
      <handler
            class="org.springframework.tooling.boot.ls.commands.ToggleComment"
            commandId="org.springframework.tooling.boot.ls.ToggleComment">
             <activeWhen>
              <with variable="activeEditorId">
                <or>
                  <equals value="SpringBootPropertyEditor"/>
                  <equals value="SpringBootYMLPropertyEditor"/>
                </or>
              </with>
            </activeWhen>
      </handler>
      <handler
            class="org.springframework.tooling.boot.ls.commands.RewriteRefactoringsHandler$RefactorBootProject"
            commandId="org.springframework.tooling.boot.ls.rewrite.refactor">
      </handler>
      <handler
            class="org.springframework.tooling.boot.ls.commands.RewriteRefactoringsHandler$UpgradeBootVersion"
            commandId="org.springframework.tooling.boot.ls.rewrite.boot-upgrade">
      </handler>
      <handler
            class="org.springframework.tooling.boot.ls.commands.RefreshModulithMetadata"
            commandId="org.springframework.tooling.boot.ls.modulith.metadata.refresh">
      </handler>
      <handler
            class="org.springframework.tooling.boot.ls.commands.AddStartersHandler"
            commandId="spring.initializr.addStarters">
      </handler>
      <handler
            class="org.springframework.tooling.boot.ls.commands.ConvertBootPropertiesHanlder$ConvertYamlToPropertiesHanlder"
            commandId="org.springframework.tooling.boot.ls.properties.convert-yaml-to-props">
      </handler>
      <handler
            class="org.springframework.tooling.boot.ls.commands.ConvertBootPropertiesHanlder$ConvertPropertiesToYamlHandler"
            commandId="org.springframework.tooling.boot.ls.properties.convert-props-to-yaml">
      </handler>
   </extension>
   <extension
         point="org.eclipse.ui.commands">
      <!-- !!! category for command is required or keybindings don't work !!! -->
      <category
            description="Spring Language Server Commands"
            id="org.springframework.ide.eclipse.commands"
            name="Spring Generic Text Editor">
      </category>
      <command
            id="org.springframework.tooling.boot.ls.ToggleComment"
            categoryId="org.springframework.ide.eclipse.commands"
            name="Toggle Comment">
      </command>
      <command
            categoryId="org.springframework.ide.eclipse.commands"
            description="Rewrite Refactorings for Spring Boot projects"
            id="org.springframework.tooling.boot.ls.rewrite.refactor"
            name="Refactor Spring Boot Project...">
      </command>
      <command
            categoryId="org.springframework.ide.eclipse.commands"
            description="Upgrade Spring Boot Version for a Spring Boot project"
            id="org.springframework.tooling.boot.ls.rewrite.boot-upgrade"
            name="Upgrade Spring Boot Version...">
      </command>
      <command
            description="Refresh project&apos;s Modulith metadata and re-validate the project"
            id="org.springframework.tooling.boot.ls.modulith.metadata.refresh"
            name="Refresh Modulith Metadata">
      </command>
      <command
            categoryId="org.eclipse.lsp4e.commandCategory"
            description="Adds Spring Boot Starters dependencies"
            id="spring.initializr.addStarters"
            name="Add Spring Boot Starters">
         <commandParameter
               id="org.eclipse.lsp4e.command.param"
               name="command"
               optional="true"
               typeId="org.eclipse.lsp4e.commandParameterType">
         </commandParameter>
         <commandParameter
               id="org.eclipse.lsp4e.path.param"
               name="path"
               optional="true"
               typeId="org.eclipse.lsp4e.pathParameterType">
         </commandParameter>
      </command>
      <command
            description="Converts Spring Boot properties file from .properties format to .yaml format"
            id="org.springframework.tooling.boot.ls.properties.convert-yaml-to-props"
            name="Convert .yaml to .properties">
      </command>
      <command
            description="Converts Spring Boot properties file from .yaml format to .properties format"
            id="org.springframework.tooling.boot.ls.properties.convert-props-to-yaml"
            name="Convert .properties to .yaml">
      </command>
   </extension>

	<extension
	     point="org.eclipse.ui.bindings">
      <!--  win32:  M1=CTRL,    M2=SHIFT, M3=ALT, M4=-
            carbon: M1=COMMAND, M2=SHIFT, M3=ALT, M4=CTRL -->
      <key
            sequence="M1+M2+C"
            contextId="org.eclipse.ui.textEditorScope"
            commandId="org.springframework.tooling.boot.ls.ToggleComment"
            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"/>
      <key
            sequence="M1+/"
            contextId="org.eclipse.ui.textEditorScope"
            commandId="org.springframework.tooling.boot.ls.ToggleComment"
            schemeId="org.eclipse.ui.defaultAcceleratorConfiguration"/>
	</extension>

   <!-- Note: locationURI below adds this to 'edit' menu. Not a great place. Decided instead to just 
        disable this. If we want to show this in a menu somewhere we should decide where and figure out how/if we
        can make it apear there. -->
<!--   <extension
         point="org.eclipse.ui.menus">
      <menuContribution
            locationURI="menu:edit?after=selectAll">
        <command
              commandId="org.springframework.tooling.boot.ls.ToggleComment"
              label="Toggle Comment Spring"
              style="push">
            <visibleWhen
                  checkEnabled="false">
               <with
                     variable="activePartId">
                  <equals
                        value="SpringBootPropertyEditor">
                  </equals>
               </with>
            </visibleWhen>
        </command>
      </menuContribution>
   </extension> -->   
   <extension
         point="org.eclipse.ui.editors">
      <editor
            class="org.eclipse.ui.internal.genericeditor.ExtensionBasedTextEditor"
            contributorClass="org.eclipse.ui.editors.text.TextEditorActionContributor"
            icon="icons/spring_obj.gif"
            id="SpringBootPropertyEditor"
            name="Generic Editor - Spring Properties"
            symbolicFontName="org.eclipse.jdt.ui.PropertiesFileEditor.textfont">
            <contentTypeBinding
               contentTypeId="org.springframework.boot.ide.properties.application.properties"
            /> 
      </editor>
      <editor
            class="org.springframework.tooling.ls.eclipse.commons.YamlGenericEditor"
            contributorClass="org.eclipse.ui.editors.text.TextEditorActionContributor"
            icon="icons/spring_yml.png"
            id="SpringBootYMLPropertyEditor"
            name="Generic Editor - Spring YAML Properties"
            symbolicFontName="org.eclipse.jdt.ui.PropertiesFileEditor.textfont">
         <contentTypeBinding
               contentTypeId="org.springframework.boot.ide.properties.application.yml">
         </contentTypeBinding>
      </editor>
      <editor
            class="org.eclipse.ui.internal.genericeditor.ExtensionBasedTextEditor"
            contributorClass="org.eclipse.ui.editors.text.TextEditorActionContributor"
            icon="icons/spring_obj.gif"
            id="SpringFactoriesEditor"
            name="Generic Editor - Spring Factories"
            symbolicFontName="org.eclipse.jdt.ui.PropertiesFileEditor.textfont">
         <contentTypeBinding
               contentTypeId="org.springframework.boot.ide.boot.factories">
         </contentTypeBinding>
      </editor>
      <editor
            class="org.eclipse.ui.internal.genericeditor.ExtensionBasedTextEditor"
            contributorClass="org.eclipse.ui.editors.text.TextEditorActionContributor"
            default="false"
            icon="icons/spring_obj.gif"
            id="JpaQueryPropertiesEditor"
            name="Generic Editor - JPA Named Queries"
            symbolicFontName="org.eclipse.jdt.ui.PropertiesFileEditor.textfont">
         <contentTypeBinding
               contentTypeId="org.springframework.boot.ide.boot.jpa-named-queries">
         </contentTypeBinding>
      </editor>
   </extension>
   

   
   <extension
         point="org.eclipse.ui.genericeditor.presentationReconcilers">
      <presentationReconciler
            class="org.eclipse.tm4e.ui.text.TMPresentationReconciler"
            contentType="org.springframework.boot.ide.properties.application.yml">
      </presentationReconciler>
      <presentationReconciler
            class="org.eclipse.tm4e.ui.text.TMPresentationReconciler"
            contentType="org.springframework.boot.ide.properties.application.properties">
      </presentationReconciler>
      <presentationReconciler
            class="org.eclipse.tm4e.ui.text.TMPresentationReconciler"
            contentType="org.springframework.boot.ide.boot.factories">
      </presentationReconciler>
      <presentationReconciler
            class="org.eclipse.tm4e.ui.text.TMPresentationReconciler"
            contentType="org.springframework.boot.ide.boot.jpa-named-queries">
      </presentationReconciler>
   </extension>



   <extension
         point="org.eclipse.tm4e.registry.grammars">
      <grammar
      		scopeName="source.yaml"
            path="./syntaxes/YAML.tmLanguage" >
      </grammar>      
      <scopeNameContentTypeBinding
            contentTypeId="org.springframework.boot.ide.properties.application.yml"
            scopeName="source.yaml">
      </scopeNameContentTypeBinding>
   </extension>

   <extension
         point="org.eclipse.tm4e.registry.grammars">
      <grammar
      		scopeName="source.java-properties"
            path="./syntaxes/JavaProperties.tmLanguage" >
      </grammar>      
      <scopeNameContentTypeBinding
            contentTypeId="org.springframework.boot.ide.properties.application.properties"
            scopeName="source.java-properties">
      </scopeNameContentTypeBinding>
      <scopeNameContentTypeBinding
            contentTypeId="org.springframework.boot.ide.boot.factories"
            scopeName="source.java-properties">
      </scopeNameContentTypeBinding>
      <scopeNameContentTypeBinding
            contentTypeId="org.springframework.boot.ide.boot.jpa-named-queries"
            scopeName="source.java-properties">
      </scopeNameContentTypeBinding>
   </extension>
   
   
   <extension
      id="springxml-completion-computer"
      point="org.eclipse.wst.sse.ui.completionProposal">         

      <proposalCategory 
            id="org.springframework.boot.ide.xmlconfig.contentassist"
            name="Spring XML Content Assist">
      </proposalCategory>

      <proposalComputer
            activate="true"
            categoryId="org.springframework.boot.ide.xmlconfig.contentassist"
            class="org.springframework.tooling.boot.ls.xml.XMLContentAssistProposalComputer"
            id="org.springframework.boot.ide.xmlconfig.contentassist.proposalcomputer">
         <contentType id="org.springframework.boot.ide.xmlconfig"/>
      </proposalComputer>

   </extension>

   <!-- what is this for? Commented it out but everything seems to work
   <extension
         point="org.eclipse.core.filebuffers.documentSetup">
      <participant
            class="org.eclipse.lsp4e.ConnectDocumentToLanguageServerSetupParticipant"
            contentTypeId="org.springframework.boot.ide.properties.application.properties">
      </participant>
   </extension>
   <extension
         point="org.eclipse.core.filebuffers.documentSetup">
      <participant
            class="org.eclipse.lsp4e.ConnectDocumentToLanguageServerSetupParticipant"
            contentTypeId="org.springframework.boot.ide.properties.application.yml">
      </participant>
   </extension>
   <extension
         point="org.eclipse.core.filebuffers.documentSetup">
      <participant
            class="org.eclipse.lsp4e.ConnectDocumentToLanguageServerSetupParticipant"
            contentTypeId="org.springframework.boot.ide.xmlconfig">
      </participant>
   </extension>
   -->

   <extension
         point="org.eclipse.ui.quickAccess">
      <computer
            class="org.springframework.tooling.boot.ls.commands.LiveProcessCommandsQuickAccessProvider"
            name="Spring - Live Process Information"
            requiresUIAccess="false"/>
      <computer
            class="org.springframework.tooling.boot.ls.commands.SpringQuickAccessProvider"
            name="Spring"
            requiresUIAccess="false">
      </computer>
   </extension>
   <extension
         point="org.springsource.ide.eclipse.commons.boot.ls.remoteapps.RemoteBootAppsDataHolder.Contributor">
      <injection
            class="org.springframework.tooling.boot.ls.prefs.RemoteAppsFromPrefsDataContributor">
      </injection>
   </extension>
   <extension
         point="org.eclipse.ui.menus">
      <menuContribution
            allPopups="false"
            locationURI="popup:org.springframework.ide.eclipse.ui.tools?after=boot">
         <command
               commandId="org.springframework.tooling.boot.ls.rewrite.boot-upgrade"
               id="org.springframework.tooling.boot.ls.rewrite.boot-upgrade"
               label="Upgrade Spring Boot Version..."
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <and>
                  <count
                        value="1">
                  </count>
                  <iterate>
                     <or>
                        <adapt
                              type="org.eclipse.core.resources.IFile">
                           <and>
                              <test
                                    forcePluginActivation="true"
                                    property="org.springsource.ide.eclipse.boot.isBootResource">
                              </test>
                              <or>
                                 <and>
                                    <test
                                          property="org.eclipse.core.resources.path"
                                          value="/*/pom.xml">
                                    </test>
                                    <test
                                          property="org.eclipse.core.resources.projectNature"
                                          value="org.eclipse.m2e.core.maven2Nature">
                                    </test>
                                 </and>
                                 <and>
                                    <test
                                          property="org.eclipse.core.resources.path"
                                          value="/*/build.gradle">
                                    </test>
                                    <test
                                          property="org.eclipse.core.resources.projectNature"
                                          value="org.eclipse.buildship.core.gradleprojectnature">
                                    </test>
                                 </and>
                              </or>
                           </and>
                        </adapt>
                        <adapt
                              type="org.eclipse.core.resources.IProject">
                           <and>
                              <test
                                    forcePluginActivation="true"
                                    property="org.springsource.ide.eclipse.boot.isBootResource">
                              </test>
                              <test
                                    property="org.eclipse.core.resources.projectNature"
                                    value="org.eclipse.jdt.core.javanature">
                              </test>
                              <or>
                                 <test
                                       property="org.eclipse.core.resources.projectNature"
                                       value="org.eclipse.m2e.core.maven2Nature">
                                 </test>
                                 <test
                                       property="org.eclipse.core.resources.projectNature"
                                       value="org.eclipse.buildship.core.gradleprojectnature">
                                 </test>
                              </or>
                           </and>
                        </adapt>
                     </or>
                  </iterate>
                  <test
                        property="org.springframework.tooling.boot.ls.areRewriteProjectRefactoringsOn">
                  </test>
               </and>
            </visibleWhen>
         </command>
         <command
               commandId="org.springframework.tooling.boot.ls.rewrite.refactor"
               id="org.springframework.tooling.boot.ls.rewrite.refactor"
               label="Refactor Spring Boot Project..."
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <and>
                  <count
                        value="1">
                  </count>
                  <iterate>
                     <or>
                        <adapt
                              type="org.eclipse.core.resources.IFile">
                           <and>
                              <test
                                    forcePluginActivation="true"
                                    property="org.springsource.ide.eclipse.boot.isBootResource">
                              </test>
                              <or>
                                 <and>
                                    <test
                                          property="org.eclipse.core.resources.path"
                                          value="/*/pom.xml">
                                    </test>
                                    <test
                                          property="org.eclipse.core.resources.projectNature"
                                          value="org.eclipse.m2e.core.maven2Nature">
                                    </test>
                                 </and>
                                 <and>
                                    <test
                                          property="org.eclipse.core.resources.path"
                                          value="/*/build.gradle">
                                    </test>
                                    <test
                                          property="org.eclipse.core.resources.projectNature"
                                          value="org.eclipse.buildship.core.gradleprojectnature">
                                    </test>
                                 </and>
                              </or>
                           </and>
                        </adapt>
                        <adapt
                              type="org.eclipse.core.resources.IProject">
                           <and>
                              <test
                                    forcePluginActivation="true"
                                    property="org.springsource.ide.eclipse.boot.isBootResource">
                              </test>
                              <test
                                    property="org.eclipse.core.resources.projectNature"
                                    value="org.eclipse.jdt.core.javanature">
                              </test>
                              <or>
                                 <test
                                       property="org.eclipse.core.resources.projectNature"
                                       value="org.eclipse.m2e.core.maven2Nature">
                                 </test>
                                 <test
                                       property="org.eclipse.core.resources.projectNature"
                                       value="org.eclipse.buildship.core.gradleprojectnature">
                                 </test>
                              </or>
                           </and>
                        </adapt>
                     </or>
                  </iterate>
                  <test
                        property="org.springframework.tooling.boot.ls.areRewriteProjectRefactoringsOn">
                  </test>
               </and>
            </visibleWhen>
         </command>
         <separator
               name="org.springframework.tooling.boot.ls.rewrite"
               visible="true">
         </separator>
         <command
               commandId="org.springframework.tooling.boot.ls.modulith.metadata.refresh"
               id="org.springframework.tooling.boot.ls.modulith.metadata.refresh"
               label="Refresh Modulith Metadata"
               style="push">
            <visibleWhen
                  checkEnabled="false">
               <and>
                  <count
                        value="1">
                  </count>
                  <iterate>
                     <or>
                        <adapt
                              type="org.eclipse.core.resources.IFile">
                           <and>
                              <test
                                    args="spring-modulith-core"
                                    forcePluginActivation="true"
                                    property="org.springframework.tooling.boot.isProjectWithDependencyResource">
                              </test>
                              <or>
                                 <and>
                                    <test
                                          property="org.eclipse.core.resources.path"
                                          value="/*/pom.xml">
                                    </test>
                                    <test
                                          property="org.eclipse.core.resources.projectNature"
                                          value="org.eclipse.m2e.core.maven2Nature">
                                    </test>
                                 </and>
                                 <and>
                                    <test
                                          property="org.eclipse.core.resources.path"
                                          value="/*/build.gradle">
                                    </test>
                                    <test
                                          property="org.eclipse.core.resources.projectNature"
                                          value="org.eclipse.buildship.core.gradleprojectnature">
                                    </test>
                                 </and>
                              </or>
                           </and>
                        </adapt>
                        <adapt
                              type="org.eclipse.core.resources.IProject">
                           <and>
                              <test
                                    args="spring-modulith-core"
                                    forcePluginActivation="true"
                                    property="org.springframework.tooling.boot.isProjectWithDependencyResource">
                              </test>
                              <test
                                    property="org.eclipse.core.resources.projectNature"
                                    value="org.eclipse.jdt.core.javanature">
                              </test>
                              <or>
                                 <test
                                       property="org.eclipse.core.resources.projectNature"
                                       value="org.eclipse.m2e.core.maven2Nature">
                                 </test>
                                 <test
                                       property="org.eclipse.core.resources.projectNature"
                                       value="org.eclipse.buildship.core.gradleprojectnature">
                                 </test>
                              </or>
                           </and>
                        </adapt>
                     </or>
                  </iterate>
               </and>
            </visibleWhen>
         </command>
         <command
               commandId="org.springframework.tooling.boot.ls.properties.convert-props-to-yaml"
               icon="icons/boot-icon.png">
            <visibleWhen
                  checkEnabled="false">
               <and>
                  <count
                        value="1">
                  </count>
                  <with
                        variable="activeMenuSelection">
                     <iterate
                           ifEmpty="false">
                        <adapt
                              type="org.eclipse.core.resources.IResource">
                           <and>
                              <test
                                    property="org.springsource.ide.eclipse.boot.isBootResource">
                              </test>
                              <test
                                    property="org.eclipse.core.resources.extension"
                                    value="properties">
                              </test>
                           </and>
                        </adapt>
                     </iterate>
                  </with>
               </and>
            </visibleWhen>
         </command>
         <command
               commandId="org.springframework.tooling.boot.ls.properties.convert-yaml-to-props"
               icon="icons/boot-icon.png">
            <visibleWhen
                  checkEnabled="false">
               <and>
                  <count
                        value="1">
                  </count>
                  <with
                        variable="activeMenuSelection">
                     <iterate
                           ifEmpty="false">
                        <adapt
                              type="org.eclipse.core.resources.IResource">
                           <and>
                              <test
                                    property="org.springsource.ide.eclipse.boot.isBootResource">
                              </test>
                              <or>
                                 <test
                                       property="org.eclipse.core.resources.extension"
                                       value="yml">
                                 </test>
                                 <test
                                       property="org.eclipse.core.resources.extension"
                                       value="yaml">
                                 </test>
                              </or>
                           </and>
                        </adapt>
                     </iterate>
                  </with>
               </and>
            </visibleWhen>
         </command>
      </menuContribution>
   </extension>
   <extension
         point="org.eclipse.core.expressions.propertyTesters">
      <propertyTester
            class="org.springframework.tooling.boot.ls.prefs.PrefsPropertyTester"
            id="org.springframework.tooling.boot.ls"
            namespace="org.springframework.tooling.boot.ls"
            properties="areRewriteProjectRefactoringsOn"
            type="java.lang.Object">
      </propertyTester>
      <propertyTester
            class="org.springframework.tooling.boot.ls.BootProjectTester"
            id="org.springframework.tooling.boot"
            namespace="org.springframework.tooling.boot"
            properties="isBootResource,isProjectWithDependencyResource"
            type="java.lang.Object">
      </propertyTester>
   </extension>
   <extension
         point="org.eclipse.ui.startup">
      <startup
            class="org.springframework.tooling.boot.ls.Startup">
      </startup>
   </extension>
   <extension
         point="org.eclipse.ui.ide.markerResolution">
      <markerResolutionGenerator
            class="org.springframework.tooling.boot.ls.markers.LSPBootCodeActionMarkerResolution"
            markerType="org.springframework.tooling.boot.ls.diagnostic">
      </markerResolutionGenerator>
   </extension>
   <extension
         id="diagnostic"
         name="Spring Boot"
         point="org.eclipse.core.resources.markers">
      <super
            type="org.eclipse.core.resources.problemmarker">
      </super>
   </extension>
<!--
   <extension
         point="org.eclipse.wildwebdeveloper.xml.lemminxExtension">
      <jar
            path="jars/commons-lsp-extensions.jar">
      </jar>
      <jar
            path="jars/xml-ls-extension.jar">
      </jar>
   </extension>
-->

</plugin>
